- name: "Updating container"
  docker_container:
    api_version: "{{ api_version | default(omit) }}"
    auto_remove: "{{ auto_remove | default(omit) }}"
    blkio_weight: "{{ blkio_weight | default(omit) }}"
    capabilities: "{{ capabilities | default(omit) }}"
    cert_path: "{{ cert_path | default(omit) }}"
    cleanup: "{{ cleanup | default(omit) }}"
    command: "{{ hostvars[inventory_hostname].command | default(omit) }}"
    cpu_period: "{{ cpu_period | default(omit) }}"
    cpu_quota: "{{ cpu_quota | default(omit) }}"
    cpu_shares: "{{ cpu_shares | default(omit) }}"
    cpuset_cpus: "{{ cpuset_cpus | default(omit) }}"
    detach: "{{ detach | default(omit) }}"
    devices: "{{ devices | default(omit) }}"
    dns_search_domains: "{{ dns_search_domains | default(omit) }}"
    dns_servers: "{{ dns_servers | default(omit) }}"
    docker_host: "tcp://{{ ansible_host | default(omit) }}:2375"
    domainname: "{{ domainname | default(omit) }}"
    entrypoint: "{{ entrypoint | default(omit) }}"
    env: "{{ env | default(omit) }}"
    env_file: "{{ env_file | default(omit) }}"
    etc_hosts: "{{ etc_hosts | default(omit) }}"
    exposed_ports: "{{ exposed_ports | default(omit) }}"
    force_kill: "{{ force_kill | default(omit) }}"
    groups: "{{ container_groups | default(omit) }}"
    hostname: "{{ hostname | default(omit) }}"
    ignore_image: "{{ ignore_image | default(omit) }}"
    image: "{{ hostvars[(inventory_hostname.split('@') | last) ].image ~ ':' ~ lookup('env','GIT_COMMIT') | default(omit) }}"
    interactive: "{{ interactive | default(omit) }}"
    ipc_mode: "{{ ipc_mode | default(omit) }}"
    keep_volumes: "{{ keep_volumes | default(omit) }}"
    kernel_memory: "{{ kernel_memory | default(omit) }}"
    key_path: "{{ key_path | default(omit) }}"
    kill_signal: "{{ kill_signal | default(omit) }}"
    labels: "{{ labels | default(omit) }}"
    links: "{{ links | default(omit) }}"
    log_driver: "{{ log_driver | default(omit) }}"
    log_options: "{{ log_options | default(omit) }}"
    mac_address: "{{ mac_address | default(omit) }}"
    memory: "{{ memory | default(omit) }}"
    memory_reservation: "{{ memory_reservation | default(omit) }}"
    memory_swappiness: "{{ memory_swappiness | default(omit) }}"
    name: "{{ environment_name }}_{{ company }}_{{ inventory_hostname.split('@') | first }}"
    network_mode: "{{ network_mode | default(omit) }}"
    networks: "{{ networks | default(omit) }}"
    oom_killer: "{{ oom_killer | default(omit) }}"
    oom_score_adj: "{{ oom_score_adj | default(omit) }}"
    paused: "{{ paused | default(omit) }}"
    pid_mode: "{{ pid_mode | default(omit) }}"
    privileged: "{{ privileged | default(omit) }}"
    pull: "{{ pull | default(omit) }}"
    purge_networks: "{{ purge_networks | default(omit) }}"
    read_only: "{{ read_only | default(omit) }}"
    recreate: "{{ recreate | default(omit) }}"
    restart: "{{ restart | default(omit) }}"
    restart_policy: "{{ restart_policy | default(omit) }}"
    restart_retries: "{{ restart_retries | default(omit) }}"
    security_opts: "{{ security_opts | default(omit) }}"
    shm_size: "{{ shm_size | default(omit) }}"
    ssl_version: "{{ ssl_version | default(omit) }}"
    state: "{{ state | default(omit) }}"
    stop_signal: "{{ stop_signal | default(omit) }}"
    stop_timeout: "{{ stop_timeout | default(omit) }}"
    sysctls: "{{ sysctls | default(omit) }}"
    timeout: "{{ timeout | default(omit) }}"
    tls: "{{ tls | default(omit) }}"
    tls_hostname: "{{ tls_hostname | default(omit) }}"
    tls_verify: "{{ tls_verify | default(omit) }}"
    tmpfs: "{{ tmpfs | default(omit) }}"
    trust_image_content: "{{ trust_image_content | default(omit) }}"
    tty: "{{ tty | default(omit) }}"
    ulimits: "{{ ulimits | default(omit) }}"
    user: "{{ user | default(omit) }}"
    userns_mode: "{{ userns_mode | default(omit) }}"
    uts: "{{ uts | default(omit) }}"
    volume_driver: "{{ volume_driver | default(omit) }}"
    volumes: "{{ volumes | default(omit) }}"
    volumes_from: "{{ volumes_from | default(omit) }}"
    working_dir: "{{ working_dir | default(omit) }}"
  delegate_to: localhost

- name: "Running deployment lifecycle steps"
  include_tasks: load_step_tasks.yml
  loop: 
    - stop
    - uninstall
    - pre-install
    - install
    - post-install
    - start
  loop_control:
    loop_var: step_name
  tags: 
    - stop
    - uninstall
    - pre-install
    - install
    - post-install
    - start
  when: jervis.services[inventory_hostname.split('@') | first][step_name] | default([])