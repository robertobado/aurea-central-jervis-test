- name: "Updating container"
  docker_container:
    api_version: "{{ hostvars[inventory_hostname.split('@') | last].api_version | default(omit) }}"
    auto_remove: "{{ hostvars[inventory_hostname.split('@') | last].auto_remove | default(omit) }}"
    blkio_weight: "{{ hostvars[inventory_hostname.split('@') | last].blkio_weight | default(omit) }}"
    capabilities: "{{ hostvars[inventory_hostname.split('@') | last].capabilities | default(omit) }}"
    cert_path: "{{ hostvars[inventory_hostname.split('@') | last].cert_path | default(omit) }}"
    cleanup: "{{ hostvars[inventory_hostname.split('@') | last].cleanup | default(omit) }}"
    command: "{{ hostvars[inventory_hostname.split('@') | last].command | default(omit) }}"
    cpu_period: "{{ hostvars[inventory_hostname.split('@') | last].cpu_period | default(omit) }}"
    cpu_quota: "{{ hostvars[inventory_hostname.split('@') | last].cpu_quota | default(omit) }}"
    cpu_shares: "{{ hostvars[inventory_hostname.split('@') | last].cpu_shares | default(omit) }}"
    cpuset_cpus: "{{ hostvars[inventory_hostname.split('@') | last].cpuset_cpus | default(omit) }}"
    detach: "{{ hostvars[inventory_hostname.split('@') | last].detach | default(omit) }}"
    devices: "{{ hostvars[inventory_hostname.split('@') | last].devices | default(omit) }}"
    dns_search_domains: "{{ hostvars[inventory_hostname.split('@') | last].dns_search_domains | default(omit) }}"
    dns_servers: "{{ hostvars[inventory_hostname.split('@') | last].dns_servers | default(omit) }}"
    docker_host: "tcp://{{ ansible_host | default(omit) }}:2375"
    domainname: "{{ hostvars[inventory_hostname.split('@') | last].domainname | default(omit) }}"
    entrypoint: "{{ hostvars[inventory_hostname.split('@') | last].entrypoint | default(omit) }}"
    env: "{{ hostvars[inventory_hostname.split('@') | last].env | default(omit) }}"
    env_file: "{{ hostvars[inventory_hostname.split('@') | last].env_file | default(omit) }}"
    etc_hosts: "{{ hostvars[inventory_hostname.split('@') | last].etc_hosts | default(omit) }}"
    exposed_ports: "{{ hostvars[inventory_hostname.split('@') | last].exposed_ports | default(omit) }}"
    force_kill: "{{ hostvars[inventory_hostname.split('@') | last].force_kill | default(omit) }}"
    groups: "{{ hostvars[inventory_hostname.split('@') | last].container_groups | default(omit) }}"
    hostname: "{{ hostvars[inventory_hostname.split('@') | last].hostname | default(omit) }}"
    ignore_image: "{{ hostvars[inventory_hostname.split('@') | last].ignore_image | default(omit) }}"
    image: "{{ hostvars[inventory_hostname.split('@') | last].image ~ ':' ~ lookup('env','GIT_COMMIT') | default(omit) }}"
    interactive: "{{ hostvars[inventory_hostname.split('@') | last].interactive | default(omit) }}"
    ipc_mode: "{{ hostvars[inventory_hostname.split('@') | last].ipc_mode | default(omit) }}"
    keep_volumes: "{{ hostvars[inventory_hostname.split('@') | last].keep_volumes | default(omit) }}"
    kernel_memory: "{{ hostvars[inventory_hostname.split('@') | last].kernel_memory | default(omit) }}"
    key_path: "{{ hostvars[inventory_hostname.split('@') | last].key_path | default(omit) }}"
    kill_signal: "{{ hostvars[inventory_hostname.split('@') | last].kill_signal | default(omit) }}"
    labels: "{{ hostvars[inventory_hostname.split('@') | last].labels | default(omit) }}"
    links: "{{ hostvars[inventory_hostname.split('@') | last].links | default(omit) }}"
    log_driver: "{{ hostvars[inventory_hostname.split('@') | last].log_driver | default(omit) }}"
    log_options: "{{ hostvars[inventory_hostname.split('@') | last].log_options | default(omit) }}"
    mac_address: "{{ hostvars[inventory_hostname.split('@') | last].mac_address | default(omit) }}"
    memory: "{{ hostvars[inventory_hostname.split('@') | last].memory | default(omit) }}"
    memory_reservation: "{{ hostvars[inventory_hostname.split('@') | last].memory_reservation | default(omit) }}"
    memory_swappiness: "{{ hostvars[inventory_hostname.split('@') | last].memory_swappiness | default(omit) }}"
    name: "{{ environment_name }}_{{ labels['com.trilogy.product'] }}_{{ labels['com.trilogy.service'] }}"
    network_mode: "{{ hostvars[inventory_hostname.split('@') | last].network_mode | default(omit) }}"
    networks: "{{ hostvars[inventory_hostname.split('@') | last].networks | default(omit) }}"
    oom_killer: "{{ hostvars[inventory_hostname.split('@') | last].oom_killer | default(omit) }}"
    oom_score_adj: "{{ hostvars[inventory_hostname.split('@') | last].oom_score_adj | default(omit) }}"
    paused: "{{ hostvars[inventory_hostname.split('@') | last].paused | default(omit) }}"
    pid_mode: "{{ hostvars[inventory_hostname.split('@') | last].pid_mode | default(omit) }}"
    privileged: "{{ hostvars[inventory_hostname.split('@') | last].privileged | default(omit) }}"
    pull: "{{ hostvars[inventory_hostname.split('@') | last].pull | default(omit) }}"
    purge_networks: "{{ hostvars[inventory_hostname.split('@') | last].purge_networks | default(omit) }}"
    read_only: "{{ hostvars[inventory_hostname.split('@') | last].read_only | default(omit) }}"
    recreate: "{{ hostvars[inventory_hostname.split('@') | last].recreate | default(omit) }}"
    restart: "{{ hostvars[inventory_hostname.split('@') | last].restart | default(omit) }}"
    restart_policy: "{{ hostvars[inventory_hostname.split('@') | last].restart_policy | default(omit) }}"
    restart_retries: "{{ hostvars[inventory_hostname.split('@') | last].restart_retries | default(omit) }}"
    security_opts: "{{ hostvars[inventory_hostname.split('@') | last].security_opts | default(omit) }}"
    shm_size: "{{ hostvars[inventory_hostname.split('@') | last].shm_size | default(omit) }}"
    ssl_version: "{{ hostvars[inventory_hostname.split('@') | last].ssl_version | default(omit) }}"
    state: "{{ hostvars[inventory_hostname.split('@') | last].state | default(omit) }}"
    stop_signal: "{{ hostvars[inventory_hostname.split('@') | last].stop_signal | default(omit) }}"
    stop_timeout: "{{ hostvars[inventory_hostname.split('@') | last].stop_timeout | default(omit) }}"
    sysctls: "{{ hostvars[inventory_hostname.split('@') | last].sysctls | default(omit) }}"
    timeout: "{{ hostvars[inventory_hostname.split('@') | last].timeout | default(omit) }}"
    tls: "{{ hostvars[inventory_hostname.split('@') | last].tls | default(omit) }}"
    tls_hostname: "{{ hostvars[inventory_hostname.split('@') | last].tls_hostname | default(omit) }}"
    tls_verify: "{{ hostvars[inventory_hostname.split('@') | last].tls_verify | default(omit) }}"
    tmpfs: "{{ hostvars[inventory_hostname.split('@') | last].tmpfs | default(omit) }}"
    trust_image_content: "{{ hostvars[inventory_hostname.split('@') | last].trust_image_content | default(omit) }}"
    tty: "{{ hostvars[inventory_hostname.split('@') | last].tty | default(omit) }}"
    ulimits: "{{ hostvars[inventory_hostname.split('@') | last].ulimits | default(omit) }}"
    user: "{{ hostvars[inventory_hostname.split('@') | last].user | default(omit) }}"
    userns_mode: "{{ hostvars[inventory_hostname.split('@') | last].userns_mode | default(omit) }}"
    uts: "{{ hostvars[inventory_hostname.split('@') | last].uts | default(omit) }}"
    volume_driver: "{{ hostvars[inventory_hostname.split('@') | last].volume_driver | default(omit) }}"
    volumes: "{{ hostvars[inventory_hostname.split('@') | last].volumes | default(omit) }}"
    volumes_from: "{{ hostvars[inventory_hostname.split('@') | last].volumes_from | default(omit) }}"
    working_dir: "{{ hostvars[inventory_hostname.split('@') | last].working_dir | default(omit) }}"
  delegate_to: localhost
  retries: 3

- name: "Running deployment lifecycle steps"
  include_tasks: load_step_tasks.yml
  loop: 
    - stop
    - uninstall
    - pre-install
    - install
    - post-install
    - start
  loop_control:
    loop_var: step_name
  when: hostvars[inventory_hostname].jervis.services[inventory_hostname.split('@') | first][step_name] | default([])