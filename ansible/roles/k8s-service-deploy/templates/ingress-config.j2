{% if stage == 'prod' %}
    {% if k8s_service_visibility == 'public' %}
        {% set ingress_class = 'prod-public' %}
    {% else %}
        {% set ingress_class = 'prod-internal' %}
    {% endif %}
{% else %}
    {% if k8s_service_visibility == 'public' %}
        {% set ingress_class = 'nonprod-public' %}
    {% else %}
        {% set ingress_class = 'nonprod-internal' %}
    {% endif %}
{% endif %}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: "{{ k8s_namespace }}"
  name: "{{ container_name | regex_replace('_','-') }}"
  labels:
    service_group: "{{ service_group | regex_replace('_','-') | default('none') }}"
    app_name: "{{ container_name | regex_replace('_','-') }}"
  annotations:
{% if k8s_ingress_annotations is defined and k8s_ingress_annotations %}
{% for k,v in k8s_ingress_annotations.iteritems() %}
    {{ k }}: "{{ v }}"
{% endfor %}
{% else %}
    nginx.ingress.kubernates.io/rewrite-target: /
    ingress.kubernates.io/rewrite-target: /
    nginx.ingress.kubernates.io/ssl-redirect: "false"
{% endif %}
    kubernetes.io/ingress.class: "{{ ingress_class }}"
spec:
{% if k8s_tls_certificate is defined and k8s_tls_certificate %}
  tls:
  - secretName: {{ k8s_tls_certificate }}
    hosts:
{% for item in k8s_ingress_hosts %}
    - {{ item }}
{% endfor %}
{% endif %}
  rules:
{% for item in k8s_ingress_hosts %}
{% for port in service_ports %}
  - host: {{ item }}
    http:
      paths:
      - path: /
        backend:
          serviceName: "{{ container_name | regex_replace('_','-') }}"
          servicePort: {{ port[1:] }}
{% endfor %}
{% endfor %}

